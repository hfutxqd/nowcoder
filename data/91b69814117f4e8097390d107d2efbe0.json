{"msg":"OK","code":0,"data":{"tpId":0,"prevTqUrl":"","isWantAnswer":false,"totalCommentCnt":1287,"hasLatestSubmission":false,"allTagArray":[],"tqId":0,"nextTqUrl":"","isShowSimQuestion":true,"customizeHeadTitle":"","showDebug":false,"codingSubTagId":3,"questionTags":[{"acmTag":false,"baiyuanTag":false,"companyTag":false,"createTime":1417674707000,"creatorId":0,"customTag":false,"iconCode":0,"id":581,"info":"","jobTag":false,"name":"栈","otherTag":false,"parentId":577,"searchLenevoTag":false,"smallTag":false,"systemTag":true},{"acmTag":false,"baiyuanTag":false,"companyTag":false,"createTime":1417674707000,"creatorId":0,"customTag":false,"iconCode":0,"id":583,"info":"","jobTag":false,"name":"树","otherTag":false,"parentId":577,"searchLenevoTag":false,"smallTag":false,"systemTag":true}],"question":{"auditedQuestion":true,"caseCount":0,"cepingType":0,"choiceQuestion":false,"codeQuestion":true,"codeWithoutCaseQuestion":false,"content":"<div>  给定一个二叉树，返回该二叉树的之字形层序遍历，（第一层从左向右，下一层从右向左，一直这样交替）<br> 例如：<br> 给定的二叉树是{1,2,3,#,#,4,5}<br> <img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20210717/557336_1626492068888/41FDD435F0BA63A57E274747DE377E05\" style=\"height: auto;width: 250.6px;\"><br> 该二叉树之字形层序遍历的结果是 </div> <div>  <div>   [  </div>  <div>   [1],  </div>  <div>   [3,2],  </div>  <div>   [4,5]  </div>  <div>   ]  </div> </div>","contestQuestion":false,"createTime":1428630129000,"creatorGroupId":0,"creatorHrUid":0,"creatorId":1,"cts":false,"ctsDepartmentId":0,"dataMiningQuestion":false,"delete":false,"designQuestion":false,"difficulty":2,"discardAnswerOrder":false,"discardSpace":false,"duration":10,"followedCount":0,"hiddenCorrect":true,"hotLevel":0,"hotValue":0,"id":23454,"inputDesc":"","judgeType":1,"likeTotal":1123,"markBit":0,"memoryLimit":65536,"multi":0,"outputDesc":"","paidQuestion":false,"paperTotal":0,"parentId":0,"passRatio":0.0,"passTotal":107221,"personTotal":415863,"position":0,"problemId":3746,"refId":0,"referenceAnswer":"","referenceCreatorId":0,"samples":[{"input":"{1,2,3,#,#,4,5}","note":"","output":"[[1],[3,2],[4,5]]"},{"input":"{8,6,10,5,7,9,11}","note":"","output":"[[8],[10,6],[5,7,9,11]]"},{"input":"{1,2,3,4,5}","note":"","output":"[[1],[3,2],[4,5]]"}],"shareTotal":0,"shield":false,"showAnswer":false,"sourcePaperId":0,"specialDataStructureStrs":"","status":1,"supportLang":"java,cpp","supportSelfTest":true,"tags":"581,583","terminalOnlySeen":false,"tiankongQuestion":false,"tikuType":1,"tikuTypeName":"系统题库","timeLimit":1,"title":"按之字形顺序打印二叉树","type":4,"typeName":"编程","uuid":"91b69814117f4e8097390d107d2efbe0","viewTotal":102919,"visibility":100,"wantAnswerCount":0},"hasAcceptSubmission":false,"customizeHeadUrl":"","allTopicArray":[],"tPage":0,"totalSolutionCnt":89,"isFollowed":false,"sourceTpId":0,"userCount":415863,"sourceQid":23454,"codingProblem":{"mainModeProblem":true,"sqlProblem":false,"type":1,"supportEnhance":false,"limitLangStr":[],"frontProblem":false,"id":3746,"shellProblem":false,"inputSample":"","submitLimit":100,"outputSample":"","paramsMainJson":"[{\"name\":\"pRoot\",\"desc\":\"\",\"dataType\":\"TREE_NODE\",\"container\":\"DEFALUT\",\"showArg\":false}]","revision":14,"methodMainJson":"{\"methodName\":\"Print\",\"methodDesc\":\"\",\"returnDataType\":\"INT\",\"returnContainer\":\"ARRAYLIST_ARRAYLIST\",\"language\":\"4\"}","outputDesc":"","memoryLimit":65536,"limitLang":[],"questionId":23454,"caseCount":20,"tCLProblem":false,"title":"按之字形顺序打印二叉树","inputDesc":"","content":"<div>  给定一个二叉树，返回该二叉树的之字形层序遍历，（第一层从左向右，下一层从右向左，一直这样交替）<br> 例如：<br> 给定的二叉树是{1,2,3,#,#,4,5}<br> <img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20210717/557336_1626492068888/41FDD435F0BA63A57E274747DE377E05\" style=\"height: auto;width: 250.6px;\"><br> 该二叉树之字形层序遍历的结果是 </div> <div>  <div>   [  </div>  <div>   [1],  </div>  <div>   [3,2],  </div>  <div>   [4,5]  </div>  <div>   ]  </div> </div>","dataFile":"1494654207465.zip","vOJProblem":false,"supportMem":false,"standardSubmissionIds":"","timeLimit":1,"outputLimit":16000,"pDF":false,"testCasesExt":"{\"samples\":[{\"output\":\"[[1],[3,2],[4,5]]\",\"input\":\"{1,2,3,#,#,4,5}\",\"note\":\"\",\"index\":1},{\"output\":\"[[8],[10,6],[5,7,9,11]]\",\"input\":\"{8,6,10,5,7,9,11}\",\"note\":\"\",\"index\":2},{\"output\":\"[[1],[3,2],[4,5]]\",\"input\":\"{1,2,3,4,5}\",\"note\":\"\",\"index\":3}]}","supportLang":"java,cpp"},"rp":0}}