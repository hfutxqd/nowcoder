{"msg":"OK","code":0,"data":{"tpId":0,"prevTqUrl":"","isWantAnswer":false,"totalCommentCnt":243,"hasLatestSubmission":false,"allTagArray":[],"tqId":0,"nextTqUrl":"","isShowSimQuestion":true,"customizeHeadTitle":"","showDebug":false,"codingSubTagId":3,"questionTags":[{"acmTag":false,"baiyuanTag":false,"companyTag":false,"createTime":1417674707000,"creatorId":0,"customTag":false,"iconCode":0,"id":583,"info":"","jobTag":false,"name":"树","otherTag":false,"parentId":577,"searchLenevoTag":false,"smallTag":false,"systemTag":true},{"acmTag":false,"baiyuanTag":false,"companyTag":false,"createTime":1545486300000,"creatorId":0,"customTag":false,"iconCode":0,"id":1263,"info":"队列是一种线性数据结构，其结构就跟我们平时排队是一样的，有一个人在头，一个人在尾，队伍中的人当前都在队列中，我们注意到这种普通的队列可能会有两种操作<a href=\"https://www.nowcoder.com/profile/2315431/note/detail/313463\" target=\"_blank\" class=\"link-green\">查看全部</a>","jobTag":false,"name":"bfs","otherTag":false,"parentId":1260,"searchLenevoTag":false,"smallTag":false,"systemTag":true}],"question":{"auditedQuestion":true,"caseCount":0,"cepingType":1,"choiceQuestion":false,"codeQuestion":true,"codeWithoutCaseQuestion":false,"content":"<p>  给定一个二叉树，返回该二叉树层序遍历的结果，（从左到右，一层一层地遍历）<br> 例如：<br> 给定的二叉树是{3,9,20,#,#,15,7},<br> <img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20210114/999991351_1610616074120/036DC34FF19FB24652AFFEB00A119A76\" style=\"height: auto;width: 171.0px;\"><br> 该二叉树层序遍历的结果是<br> [<br> <span> </span>[3],<br> <span> </span>[9,20],<br> <span> </span>[15,7]<br> ] </p> <div> </div>","contestQuestion":false,"createTime":1399560164000,"creatorGroupId":0,"creatorHrUid":0,"creatorId":1,"cts":false,"ctsDepartmentId":0,"dataMiningQuestion":false,"delete":false,"designQuestion":false,"difficulty":3,"discardAnswerOrder":false,"discardSpace":false,"duration":0,"followedCount":0,"hiddenCorrect":true,"hotLevel":0,"hotValue":0,"id":644,"judgeType":1,"likeTotal":363,"markBit":0,"memoryLimit":65536,"multi":0,"paidQuestion":false,"paperTotal":0,"parentId":0,"passRatio":0.0,"passTotal":49904,"personTotal":115172,"position":0,"problemId":147,"refId":0,"referenceAnswer":"","referenceCreatorId":0,"samples":[{"input":"{1,2}","note":"","output":"[[1],[2]]\n"},{"input":"{1,2,3,4,#,#,5}","note":"","output":"[[1],[2,3],[4,5]]\n"}],"shareTotal":0,"shield":false,"showAnswer":false,"sourcePaperId":0,"specialDataStructureStrs":"","status":1,"supportLang":"java,cpp","supportSelfTest":true,"tags":"583,1263","terminalOnlySeen":false,"tiankongQuestion":false,"tikuType":1,"tikuTypeName":"系统题库","timeLimit":1,"title":"求二叉树的层序遍历","type":4,"typeName":"编程","uuid":"04a5560e43e24e9db4595865dc9c63a3","viewTotal":26021,"visibility":100,"wantAnswerCount":0},"hasAcceptSubmission":false,"customizeHeadUrl":"","allTopicArray":[],"tPage":0,"totalSolutionCnt":91,"isFollowed":false,"sourceTpId":0,"userCount":115172,"sourceQid":644,"codingProblem":{"mainModeProblem":true,"sqlProblem":false,"type":1,"supportEnhance":false,"limitLangStr":[],"frontProblem":false,"id":147,"shellProblem":false,"inputSample":"{1,2}","submitLimit":100,"outputSample":"[[1],[2]]\n","paramsMainJson":"[{\"name\":\"root\",\"desc\":\"\",\"dataType\":\"TREE_NODE\",\"container\":\"DEFALUT\",\"showArg\":false}]","revision":9,"methodMainJson":"{\"methodName\":\"levelOrder\",\"methodDesc\":\"\",\"returnDataType\":\"INT\",\"returnContainer\":\"ARRAYLIST_ARRAYLIST\",\"language\":\"4\"}","memoryLimit":65536,"limitLang":[],"template":"","questionId":644,"caseCount":20,"tCLProblem":false,"title":"求二叉树的层序遍历","content":"<p>  给定一个二叉树，返回该二叉树层序遍历的结果，（从左到右，一层一层地遍历）<br> 例如：<br> 给定的二叉树是{3,9,20,#,#,15,7},<br> <img alt=\"\" src=\"https://uploadfiles.nowcoder.com/images/20210114/999991351_1610616074120/036DC34FF19FB24652AFFEB00A119A76\" style=\"height: auto;width: 171.0px;\"><br> 该二叉树层序遍历的结果是<br> [<br> <span> </span>[3],<br> <span> </span>[9,20],<br> <span> </span>[15,7]<br> ] </p> <div> </div>","dataFile":"5e48fc22debb4edbab9108518f667652.zip","vOJProblem":false,"cssTemplate":"","supportMem":false,"standardSubmissionIds":"","timeLimit":1,"outputLimit":16000,"pDF":false,"testCasesExt":"{\"samples\":[{\"output\":\"[[1],[2]]\\n\",\"input\":\"{1,2}\",\"note\":\"\",\"index\":1},{\"output\":\"[[1],[2,3],[4,5]]\\n\",\"input\":\"{1,2,3,4,#,#,5}\",\"note\":\"\",\"index\":2}]}","supportLang":"java,cpp"},"rp":0}}